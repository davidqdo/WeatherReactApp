{"ast":null,"code":"var _jsxFileName = \"/home/davidqdo/Projects/WeatherReactApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n/* Weather API */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"2a371191d68e6c42d89404f7437faa0a\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        /*console.log(result);*/\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\"\n    /* Change the screen color based on user-submitted location and its temperature */\n    ? weather.main.temp <= 8 ? 'app cold' :\n    /* Cold Weather */\n    weather.main.temp > 8 && weather.main.temp <= 16 ? 'app cool' :\n    /* Cool Weather */\n    weather.main.temp > 16 && weather.main.temp <= 24 ? 'app warm' :\n    /* Warm Weather */\n    weather.main.temp >= 25 ? 'app hot' :\n    /* Hot Weather */\n    'app' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp * (9 / 5) + 32), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WfIlIcXSxCUve4W/aFy4QSWUDkM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"sources":["/home/davidqdo/Projects/WeatherReactApp/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\n/* Weather API */\nconst api = {\n  key: \"2a371191d68e6c42d89404f7437faa0a\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          /*console.log(result);*/\n        });\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={\n      (typeof weather.main != \"undefined\") \n      /* Change the screen color based on user-submitted location and its temperature */\n        ? ((weather.main.temp <= 8) ? 'app cold' : /* Cold Weather */\n          (weather.main.temp > 8 && weather.main.temp <= 16) ? 'app cool' : /* Cool Weather */\n          (weather.main.temp > 16 && weather.main.temp <= 24) ? 'app warm' : /* Warm Weather */\n          (weather.main.temp >= 25) ? 'app hot' : /* Hot Weather */\n          'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input \n            type=\"text\" \n            className=\"search-bar\" \n            placeholder=\"Search...\" \n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>  \n          </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">{Math.round(weather.main.temp)}°C</div>\n              <div className=\"temp\">{Math.round((weather.main.temp * (9/5)) + 32)}°F</div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}